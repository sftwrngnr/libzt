#
# inter-symbol newlines
#

nl_enum_brace       = remove    # "enum {" vs "enum \n {"
nl_union_brace      = remove    # "union {" vs "union \n {"
nl_struct_brace     = remove    # "struct {" vs "struct \n {"
nl_do_brace         = remove    # "do {" vs "do \n {"
nl_if_brace         = remove    # "if () {" vs "if () \n {"
nl_for_brace        = remove    # "for () {" vs "for () \n {"
nl_else_brace       = remove    # "else {" vs "else \n {"
nl_while_brace      = remove    # "while () {" vs "while () \n {"
nl_switch_brace     = remove    # "switch () {" vs "switch () \n {"
nl_brace_while      = remove    # "} while" vs "} \n while" - cuddle while
nl_brace_else       = remove    # "} else" vs "} \n else" - cuddle else
nl_func_var_def_blk = 1
nl_fcall_brace      = remove    # "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace       = remove    # "int foo() {" vs "int foo()\n{"
indent_switch_case  = 4

#
# Source code modifications
#

mod_paren_on_return = remove # "return 1;" vs "return (1);"
mod_full_brace_if   = add # "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_for  = add # "for () a--;" vs "for () { a--; }"
mod_full_brace_do   = add # "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while = add # "while (a) a--;" vs "while (a) { a--; }"
mod_full_brace_nl    = 3 # don't remove if more than 3 newlines
mod_add_long_function_closebrace_comment = 40
mod_add_long_switch_closebrace_comment   = 20
mod_add_long_ifdef_endif_comment         = 5
mod_add_long_ifdef_else_comment          = 5
align_right_cmt_gap                      = 5
# align_right_cmt_span                   = 10
align_right_cmt_at_col                   = 60
cmt_cpp_to_c                             = true
cmt_star_cont                            = true
#
# inter-character spacing options
#

sp_return_paren     = force     # "return (1);" vs "return(1);"
sp_sizeof_paren     = remove    # "sizeof (int)" vs "sizeof(int)"
sp_before_sparen    = force       # "if (" vs "if("
sp_after_sparen     = force       # "if () {" vs "if (){"
sp_after_cast       = remove    # "(int) a" vs "(int)a"
sp_inside_braces    = force       # "{ 1 }" vs "{1}"
sp_inside_braces_struct = force   # "{ 1 }" vs "{1}"
sp_inside_braces_enum   = force   # "{ 1 }" vs "{1}"
p_else_brace       = force
sp_brace_else       = force
sp_assign           = force
sp_arith            = force
sp_bool             = force
sp_compare          = force
sp_assign           = force
sp_after_comma      = force
sp_func_def_paren   = remove    # "int foo (){" vs "int foo(){"
sp_func_call_paren  = remove    # "foo (" vs "foo("
sp_func_proto_paren = remove    # "int foo ();" vs "int foo();"
sp_paren_brace      = force
sp_sparen_brace      = force
sp_fparen_brace      = force

#
# Aligning stuff
#

newlines                    = auto
output_tab_size             = 4
indent_columns              = output_tab_size
indent_with_tabs            = 0
align_with_tabs             = false # use tabs to align
align_on_tabstop            = false # align on tabstops
align_enum_equ_span         = 4 # '=' in enum definition
align_var_def_star_style    = 2
align_var_def_span          = 2
align_nl_cont               = TRUE
align_var_struct_span       = 1
align_struct_init_span      = 3
indent_brace                = 0
eat_blanks_after_open_brace   = true # Whether to remove blank lines after '{'
eat_blanks_before_close_brace = true # Whether to remove blank lines before '}'

sp_after_ptr_star     = add
align_var_def_inline  = true
align_assign_span     = 5
align_assign_thresh   = 10
sp_macro              = force
align_nl_cont         = true
align_pp_define_span  = 10
nl_define_macro       = true
pp_define_at_level    = true
align_typedef_span    = 20
align_var_def_colon   = true
align_func_proto_span = 20
nl_after_func_body    = 2
sp_type_func          = add
align_mix_var_proto   = true

align_func_params       = true

indent_func_proto_param = true
#indent_func_call_param  = true
pos_conditional         = lead
nl_func_type_name       = add
align_right_cmt_span    = 8

cmt_c_nl_start = true
cmt_c_nl_end   = true
cmt_c_group    = true
cmt_cpp_to_c   = true
cmt_star_cont  = true
